initialise-binding(initialise-storing(initialise-giving(finalise-failing(scope(recursive(set("BS"), collateral(map(tuple("BS", class(thunk(closure(reference(object(fresh-atom, "BS", collateral(map(tuple("number", allocate-initialised-variable(vectors(variables), vector()))), map(tuple("size", allocate-initialised-variable(integers, 0)))))))), collateral(map(tuple("Start", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("sz", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("aux01", allocate-initialised-variable(integers, 0))), map(tuple("aux02", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("aux01"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Init"), tuple(given, assigned(bound("sz")))))), assign(bound("aux02"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Print"), tuple(given)))), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 8))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 19))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 20))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 21))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 37))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 38))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 39))), print(to-string(1), "\n"), print(to-string(0), "\n")), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 50))), print(to-string(1), "\n"), print(to-string(0), "\n")), 999)))))), map(tuple("Search", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("num", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("bs01", allocate-initialised-variable(booleans, false))), map(tuple("right", allocate-initialised-variable(integers, 0))), map(tuple("left", allocate-initialised-variable(integers, 0))), map(tuple("var_cont", allocate-initialised-variable(booleans, false))), map(tuple("medium", allocate-initialised-variable(integers, 0))), map(tuple("aux01", allocate-initialised-variable(integers, 0))), map(tuple("nt", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("aux01"), 0), assign(bound("bs01"), false), assign(bound("right"), length(vector-elements(assigned(bound("number"))))), assign(bound("right"), integer-subtract(assigned(bound("right")), 1)), assign(bound("left"), 0), assign(bound("var_cont"), true), while-true(assigned(bound("var_cont")), sequential(assign(bound("medium"), integer-add(assigned(bound("left")), assigned(bound("right")))), assign(bound("medium"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Div"), tuple(given, assigned(bound("medium")))))), assign(bound("aux01"), assigned(checked(index(integer-add(assigned(bound("medium")), 1), vector-elements(assigned(bound("number"))))))), if-true-else(integer-is-less(assigned(bound("num")), assigned(bound("aux01"))), assign(bound("right"), integer-subtract(assigned(bound("medium")), 1)), assign(bound("left"), integer-add(assigned(bound("medium")), 1))), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Compare"), tuple(given, assigned(bound("aux01")), assigned(bound("num"))))), assign(bound("var_cont"), false), assign(bound("var_cont"), true)), if-true-else(integer-is-less(assigned(bound("right")), assigned(bound("left"))), assign(bound("var_cont"), false), assign(bound("nt"), 0)))), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Compare"), tuple(given, assigned(bound("aux01")), assigned(bound("num"))))), assign(bound("bs01"), true), assign(bound("bs01"), false)), assigned(bound("bs01")))))))), map(tuple("Div", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("num", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("count01", allocate-initialised-variable(integers, 0))), map(tuple("count02", allocate-initialised-variable(integers, 0))), map(tuple("aux03", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("count01"), 0), assign(bound("count02"), 0), assign(bound("aux03"), integer-subtract(assigned(bound("num")), 1)), while-true(integer-is-less(assigned(bound("count02")), assigned(bound("aux03"))), sequential(assign(bound("count01"), integer-add(assigned(bound("count01")), 1)), assign(bound("count02"), integer-add(assigned(bound("count02")), 2)))), assigned(bound("count01")))))))), map(tuple("Compare", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("num1", allocate-initialised-variable(integers, given))))), pattern(abstraction(map(tuple("num2", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("retval", allocate-initialised-variable(booleans, false))), map(tuple("aux02", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("retval"), false), assign(bound("aux02"), integer-add(assigned(bound("num2")), 1)), if-true-else(integer-is-less(assigned(bound("num1")), assigned(bound("num2"))), assign(bound("retval"), false), if-true-else(not(integer-is-less(assigned(bound("num1")), assigned(bound("aux02")))), assign(bound("retval"), false), assign(bound("retval"), true))), assigned(bound("retval")))))))), map(tuple("Print", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("j", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("j"), 1), while-true(integer-is-less(assigned(bound("j")), assigned(bound("size"))), sequential(print(to-string(assigned(checked(index(integer-add(assigned(bound("j")), 1), vector-elements(assigned(bound("number"))))))), "\n"), assign(bound("j"), integer-add(assigned(bound("j")), 1)))), print(to-string(99999), "\n"), 0)))))), map(tuple("Init", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("sz", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("j", allocate-initialised-variable(integers, 0))), map(tuple("k", allocate-initialised-variable(integers, 0))), map(tuple("aux02", allocate-initialised-variable(integers, 0))), map(tuple("aux01", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("size"), assigned(bound("sz"))), assign(bound("number"), vector(interleave-repeat(allocate-initialised-variable(integers, 0), 1, assigned(bound("sz"))))), assign(bound("j"), 1), assign(bound("k"), integer-add(assigned(bound("size")), 1)), while-true(integer-is-less(assigned(bound("j")), assigned(bound("size"))), sequential(assign(bound("aux01"), integer-multiply(2, assigned(bound("j")))), assign(bound("aux02"), integer-subtract(assigned(bound("k")), 3)), assign(checked(index(integer-add(assigned(bound("j")), 1), vector-elements(assigned(bound("number"))))), integer-add(assigned(bound("aux01")), assigned(bound("aux02")))), assign(bound("j"), integer-add(assigned(bound("j")), 1)), assign(bound("k"), integer-subtract(assigned(bound("k")), 1)))), 0)))))))))))), print(to-string(give(force(class-instantiator(bound("BS"))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Start"), tuple(given, 20)))), "\n"))))))