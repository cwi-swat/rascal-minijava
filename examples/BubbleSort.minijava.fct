initialise-binding(initialise-storing(initialise-giving(finalise-failing(scope(recursive(set("BBS"), collateral(map(tuple("BBS", class(thunk(closure(reference(object(fresh-atom, "BBS", collateral(map(tuple("number", allocate-initialised-variable(vectors(variables), vector()))), map(tuple("size", allocate-initialised-variable(integers, 0)))))))), collateral(map(tuple("Start", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("sz", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("aux01", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("aux01"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Init"), tuple(given, assigned(bound("sz")))))), assign(bound("aux01"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Print"), tuple(given)))), print(to-string(99999), "\n"), assign(bound("aux01"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Sort"), tuple(given)))), assign(bound("aux01"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Print"), tuple(given)))), 0)))))), map(tuple("Sort", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("nt", allocate-initialised-variable(integers, 0))), map(tuple("i", allocate-initialised-variable(integers, 0))), map(tuple("aux02", allocate-initialised-variable(integers, 0))), map(tuple("aux04", allocate-initialised-variable(integers, 0))), map(tuple("aux05", allocate-initialised-variable(integers, 0))), map(tuple("aux06", allocate-initialised-variable(integers, 0))), map(tuple("aux07", allocate-initialised-variable(integers, 0))), map(tuple("j", allocate-initialised-variable(integers, 0))), map(tuple("t", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("i"), integer-subtract(assigned(bound("size")), 1)), assign(bound("aux02"), integer-subtract(0, 1)), while-true(integer-is-less(assigned(bound("aux02")), assigned(bound("i"))), sequential(assign(bound("j"), 1), while-true(integer-is-less(assigned(bound("j")), integer-add(assigned(bound("i")), 1)), sequential(assign(bound("aux07"), integer-subtract(assigned(bound("j")), 1)), assign(bound("aux04"), assigned(checked(index(integer-add(assigned(bound("aux07")), 1), vector-elements(assigned(bound("number"))))))), assign(bound("aux05"), assigned(checked(index(integer-add(assigned(bound("j")), 1), vector-elements(assigned(bound("number"))))))), if-true-else(integer-is-less(assigned(bound("aux05")), assigned(bound("aux04"))), sequential(assign(bound("aux06"), integer-subtract(assigned(bound("j")), 1)), assign(bound("t"), assigned(checked(index(integer-add(assigned(bound("aux06")), 1), vector-elements(assigned(bound("number"))))))), assign(checked(index(integer-add(assigned(bound("aux06")), 1), vector-elements(assigned(bound("number"))))), assigned(checked(index(integer-add(assigned(bound("j")), 1), vector-elements(assigned(bound("number"))))))), assign(checked(index(integer-add(assigned(bound("j")), 1), vector-elements(assigned(bound("number"))))), assigned(bound("t")))), assign(bound("nt"), 0)), assign(bound("j"), integer-add(assigned(bound("j")), 1)))), assign(bound("i"), integer-subtract(assigned(bound("i")), 1)))), 0)))))), map(tuple("Print", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("j", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("j"), 0), while-true(integer-is-less(assigned(bound("j")), assigned(bound("size"))), sequential(print(to-string(assigned(checked(index(integer-add(assigned(bound("j")), 1), vector-elements(assigned(bound("number"))))))), "\n"), assign(bound("j"), integer-add(assigned(bound("j")), 1)))), 0)))))), map(tuple("Init", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("sz", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("size"), assigned(bound("sz"))), assign(bound("number"), vector(interleave-repeat(allocate-initialised-variable(integers, 0), 1, assigned(bound("sz"))))), assign(checked(index(integer-add(0, 1), vector-elements(assigned(bound("number"))))), 20), assign(checked(index(integer-add(1, 1), vector-elements(assigned(bound("number"))))), 7), assign(checked(index(integer-add(2, 1), vector-elements(assigned(bound("number"))))), 12), assign(checked(index(integer-add(3, 1), vector-elements(assigned(bound("number"))))), 18), assign(checked(index(integer-add(4, 1), vector-elements(assigned(bound("number"))))), 2), assign(checked(index(integer-add(5, 1), vector-elements(assigned(bound("number"))))), 11), assign(checked(index(integer-add(6, 1), vector-elements(assigned(bound("number"))))), 6), assign(checked(index(integer-add(7, 1), vector-elements(assigned(bound("number"))))), 9), assign(checked(index(integer-add(8, 1), vector-elements(assigned(bound("number"))))), 19), assign(checked(index(integer-add(9, 1), vector-elements(assigned(bound("number"))))), 5), 0)))))))))))), print(to-string(give(force(class-instantiator(bound("BBS"))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Start"), tuple(given, 10)))), "\n"))))))