initialise-binding(initialise-storing(initialise-giving(finalise-failing(scope(recursive(set("Fac"), collateral(map(tuple("Fac", class(thunk(closure(reference(object(fresh-atom, "Fac", collateral())))), collateral(map(tuple("ComputeFac", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("num", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("num_aux", allocate-initialised-variable(integers, 0))))), sequential(if-true-else(integer-is-less(assigned(bound("num")), 1), assign(bound("num_aux"), 1), assign(bound("num_aux"), integer-multiply(assigned(bound("num")), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "ComputeFac"), tuple(given, integer-subtract(assigned(bound("num")), 1))))))), assigned(bound("num_aux")))))))))))))), print(to-string(give(force(class-instantiator(bound("Fac"))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "ComputeFac"), tuple(given, 10)))), "\n"))))))