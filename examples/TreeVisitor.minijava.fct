initialise-binding(initialise-storing(initialise-giving(finalise-failing(scope(recursive(set("TV", "Tree", "Visitor", "MyVisitor"), collateral(map(tuple("TV", class(thunk(closure(reference(object(fresh-atom, "TV", collateral())))), collateral(map(tuple("Start", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("root", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("ntb", allocate-initialised-variable(booleans, false))), map(tuple("nti", allocate-initialised-variable(integers, 0))), map(tuple("v", allocate-initialised-variable(pointers(objects), pointer-null))))), sequential(assign(bound("root"), force(class-instantiator(bound("Tree")))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Init"), tuple(given, 16)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Print"), tuple(given)))), print(to-string(100000000), "\n"), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 8)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 24)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 4)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 12)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 20)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 28)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Insert"), tuple(given, 14)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Print"), tuple(given)))), print(to-string(100000000), "\n"), assign(bound("v"), force(class-instantiator(bound("MyVisitor")))), print(to-string(50000000), "\n"), assign(bound("nti"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "accept"), tuple(given, assigned(bound("v")))))), print(to-string(100000000), "\n"), print(to-string(give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 24)))), "\n"), print(to-string(give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 12)))), "\n"), print(to-string(give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 16)))), "\n"), print(to-string(give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 50)))), "\n"), print(to-string(give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 12)))), "\n"), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Delete"), tuple(given, 12)))), assign(bound("ntb"), give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Print"), tuple(given)))), print(to-string(give(assigned(bound("root")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Search"), tuple(given, 12)))), "\n"), 0)))))))))), map(tuple("Tree", class(thunk(closure(reference(object(fresh-atom, "Tree", collateral(map(tuple("left", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("right", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("key", allocate-initialised-variable(integers, 0))), map(tuple("has_left", allocate-initialised-variable(booleans, false))), map(tuple("has_right", allocate-initialised-variable(booleans, false))), map(tuple("my_null", allocate-initialised-variable(pointers(objects), pointer-null)))))))), collateral(map(tuple("Init", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("v_key", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("key"), assigned(bound("v_key"))), assign(bound("has_left"), false), assign(bound("has_right"), false), true)))))), map(tuple("SetRight", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("rn", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("right"), assigned(bound("rn"))), true)))))), map(tuple("SetLeft", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("ln", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("left"), assigned(bound("ln"))), true)))))), map(tuple("GetRight", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assigned(bound("right")))))))), map(tuple("GetLeft", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assigned(bound("left")))))))), map(tuple("GetKey", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assigned(bound("key")))))))), map(tuple("SetKey", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("v_key", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("key"), assigned(bound("v_key"))), true)))))), map(tuple("GetHas_Right", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assigned(bound("has_right")))))))), map(tuple("GetHas_Left", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assigned(bound("has_left")))))))), map(tuple("SetHas_Left", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("val", allocate-initialised-variable(booleans, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("has_left"), assigned(bound("val"))), true)))))), map(tuple("SetHas_Right", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("val", allocate-initialised-variable(booleans, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral()), sequential(assign(bound("has_right"), assigned(bound("val"))), true)))))), map(tuple("Compare", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("num1", allocate-initialised-variable(integers, given))))), pattern(abstraction(map(tuple("num2", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("ntb", allocate-initialised-variable(booleans, false))), map(tuple("nti", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("ntb"), false), assign(bound("nti"), integer-add(assigned(bound("num2")), 1)), if-true-else(integer-is-less(assigned(bound("num1")), assigned(bound("num2"))), assign(bound("ntb"), false), if-true-else(not(integer-is-less(assigned(bound("num1")), assigned(bound("nti")))), assign(bound("ntb"), false), assign(bound("ntb"), true))), assigned(bound("ntb")))))))), map(tuple("Insert", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("v_key", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("new_node", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("ntb", allocate-initialised-variable(booleans, false))), map(tuple("current_node", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("cont", allocate-initialised-variable(booleans, false))), map(tuple("key_aux", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("new_node"), force(class-instantiator(bound("Tree")))), assign(bound("ntb"), give(assigned(bound("new_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Init"), tuple(given, assigned(bound("v_key")))))), assign(bound("current_node"), assigned(bound("this"))), assign(bound("cont"), true), while-true(assigned(bound("cont")), sequential(assign(bound("key_aux"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), if-true-else(integer-is-less(assigned(bound("v_key")), assigned(bound("key_aux"))), sequential(if-true-else(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), assign(bound("current_node"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given)))), sequential(assign(bound("cont"), false), assign(bound("ntb"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetHas_Left"), tuple(given, true)))), assign(bound("ntb"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetLeft"), tuple(given, assigned(bound("new_node"))))))))), sequential(if-true-else(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), assign(bound("current_node"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given)))), sequential(assign(bound("cont"), false), assign(bound("ntb"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetHas_Right"), tuple(given, true)))), assign(bound("ntb"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetRight"), tuple(given, assigned(bound("new_node")))))))))))), true)))))), map(tuple("Delete", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("v_key", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("current_node", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("parent_node", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("cont", allocate-initialised-variable(booleans, false))), map(tuple("found", allocate-initialised-variable(booleans, false))), map(tuple("ntb", allocate-initialised-variable(booleans, false))), map(tuple("is_root", allocate-initialised-variable(booleans, false))), map(tuple("key_aux", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("current_node"), assigned(bound("this"))), assign(bound("parent_node"), assigned(bound("this"))), assign(bound("cont"), true), assign(bound("found"), false), assign(bound("is_root"), true), while-true(assigned(bound("cont")), sequential(assign(bound("key_aux"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), if-true-else(integer-is-less(assigned(bound("v_key")), assigned(bound("key_aux"))), if-true-else(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), sequential(assign(bound("parent_node"), assigned(bound("current_node"))), assign(bound("current_node"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given))))), assign(bound("cont"), false)), if-true-else(integer-is-less(assigned(bound("key_aux")), assigned(bound("v_key"))), if-true-else(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), sequential(assign(bound("parent_node"), assigned(bound("current_node"))), assign(bound("current_node"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given))))), assign(bound("cont"), false)), sequential(if-true-else(assigned(bound("is_root")), if-true-else(if-true-else(not(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given)))), not(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given)))), false), assign(bound("ntb"), true), assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Remove"), tuple(given, assigned(bound("parent_node")), assigned(bound("current_node"))))))), assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Remove"), tuple(given, assigned(bound("parent_node")), assigned(bound("current_node"))))))), assign(bound("found"), true), assign(bound("cont"), false)))), assign(bound("is_root"), false))), assigned(bound("found")))))))), map(tuple("Remove", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("p_node", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("c_node", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("ntb", allocate-initialised-variable(booleans, false))), map(tuple("auxkey1", allocate-initialised-variable(integers, 0))), map(tuple("auxkey2", allocate-initialised-variable(integers, 0))))), sequential(if-true-else(give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "RemoveLeft"), tuple(given, assigned(bound("p_node")), assigned(bound("c_node")))))), if-true-else(give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "RemoveRight"), tuple(given, assigned(bound("p_node")), assigned(bound("c_node")))))), sequential(assign(bound("auxkey1"), give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), assign(bound("auxkey2"), give(give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), if-true-else(give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Compare"), tuple(given, assigned(bound("auxkey1")), assigned(bound("auxkey2"))))), sequential(assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetLeft"), tuple(given, assigned(bound("my_null")))))), assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetHas_Left"), tuple(given, false))))), sequential(assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetRight"), tuple(given, assigned(bound("my_null")))))), assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetHas_Right"), tuple(given, false))))))))), true)))))), map(tuple("RemoveRight", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("p_node", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("c_node", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("ntb", allocate-initialised-variable(booleans, false))))), sequential(while-true(give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), sequential(assign(bound("ntb"), give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetKey"), tuple(given, give(give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given))))))), assign(bound("p_node"), assigned(bound("c_node"))), assign(bound("c_node"), give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given)))))), assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetRight"), tuple(given, assigned(bound("my_null")))))), assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetHas_Right"), tuple(given, false)))), true)))))), map(tuple("RemoveLeft", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("p_node", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("c_node", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("ntb", allocate-initialised-variable(booleans, false))))), sequential(while-true(give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), sequential(assign(bound("ntb"), give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetKey"), tuple(given, give(give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given))))))), assign(bound("p_node"), assigned(bound("c_node"))), assign(bound("c_node"), give(assigned(bound("c_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given)))))), assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetLeft"), tuple(given, assigned(bound("my_null")))))), assign(bound("ntb"), give(assigned(bound("p_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "SetHas_Left"), tuple(given, false)))), true)))))), map(tuple("Search", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("v_key", allocate-initialised-variable(integers, given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("current_node", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("ifound", allocate-initialised-variable(integers, 0))), map(tuple("cont", allocate-initialised-variable(booleans, false))), map(tuple("key_aux", allocate-initialised-variable(integers, 0))))), sequential(assign(bound("current_node"), assigned(bound("this"))), assign(bound("cont"), true), assign(bound("ifound"), 0), while-true(assigned(bound("cont")), sequential(assign(bound("key_aux"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), if-true-else(integer-is-less(assigned(bound("v_key")), assigned(bound("key_aux"))), if-true-else(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), assign(bound("current_node"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given)))), assign(bound("cont"), false)), if-true-else(integer-is-less(assigned(bound("key_aux")), assigned(bound("v_key"))), if-true-else(give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), assign(bound("current_node"), give(assigned(bound("current_node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given)))), assign(bound("cont"), false)), sequential(assign(bound("ifound"), 1), assign(bound("cont"), false)))))), assigned(bound("ifound")))))))), map(tuple("Print", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("ntb", allocate-initialised-variable(booleans, false))), map(tuple("current_node", allocate-initialised-variable(pointers(objects), pointer-null))))), sequential(assign(bound("current_node"), assigned(bound("this"))), assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "RecPrint"), tuple(given, assigned(bound("current_node")))))), true)))))), map(tuple("RecPrint", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("node", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("ntb", allocate-initialised-variable(booleans, false))))), sequential(if-true-else(give(assigned(bound("node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), sequential(assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "RecPrint"), tuple(given, give(assigned(bound("node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given)))))))), assign(bound("ntb"), true)), print(to-string(give(assigned(bound("node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), "\n"), if-true-else(give(assigned(bound("node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), sequential(assign(bound("ntb"), give(assigned(bound("this")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "RecPrint"), tuple(given, give(assigned(bound("node")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given)))))))), assign(bound("ntb"), true)), true)))))), map(tuple("accept", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("v", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("nti", allocate-initialised-variable(integers, 0))))), sequential(print(to-string(333), "\n"), assign(bound("nti"), give(assigned(bound("v")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "visit"), tuple(given, assigned(bound("this")))))), 0)))))))))), map(tuple("Visitor", class(thunk(closure(reference(object(fresh-atom, "Visitor", collateral(map(tuple("l", allocate-initialised-variable(pointers(objects), pointer-null))), map(tuple("r", allocate-initialised-variable(pointers(objects), pointer-null)))))))), collateral(map(tuple("visit", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("n", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("nti", allocate-initialised-variable(integers, 0))))), sequential(if-true-else(give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), sequential(assign(bound("r"), give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given)))), assign(bound("nti"), give(assigned(bound("r")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "accept"), tuple(given, assigned(bound("this"))))))), assign(bound("nti"), 0)), if-true-else(give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), sequential(assign(bound("l"), give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given)))), assign(bound("nti"), give(assigned(bound("l")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "accept"), tuple(given, assigned(bound("this"))))))), assign(bound("nti"), 0)), 0)))))))))), map(tuple("MyVisitor", class(thunk(closure(reference(object(fresh-atom, "MyVisitor", collateral(), dereference(force(class-instantiator(bound("Visitor")))))))), collateral(map(tuple("visit", function(closure(scope(collateral(match(given, tuple(pattern(abstraction(map(tuple("this", allocate-initialised-variable(pointers(objects), given))))), pattern(abstraction(map(tuple("n", allocate-initialised-variable(pointers(objects), given))))))), object-single-inheritance-feature-map(checked(dereference(first(tuple-elements(given))))), collateral(map(tuple("nti", allocate-initialised-variable(integers, 0))))), sequential(if-true-else(give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Right"), tuple(given))), sequential(assign(bound("r"), give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetRight"), tuple(given)))), assign(bound("nti"), give(assigned(bound("r")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "accept"), tuple(given, assigned(bound("this"))))))), assign(bound("nti"), 0)), print(to-string(give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetKey"), tuple(given)))), "\n"), if-true-else(give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetHas_Left"), tuple(given))), sequential(assign(bound("l"), give(assigned(bound("n")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "GetLeft"), tuple(given)))), assign(bound("nti"), give(assigned(bound("l")), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "accept"), tuple(given, assigned(bound("this"))))))), assign(bound("nti"), 0)), 0))))))), "Visitor"))))), print(to-string(give(force(class-instantiator(bound("TV"))), apply(lookup(class-name-single-inheritance-feature-map(object-class-name(checked(dereference(given)))), "Start"), tuple(given)))), "\n"))))))